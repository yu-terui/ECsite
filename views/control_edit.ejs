<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>EC Store - 管理者画面</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.4.0/css/bootstrap-reboot.min.css">
        <link type="text/css" rel="stylesheet" href="../assets/css/style.css">
    </head>
    <body id="control_edit">
        <header>
            <ul>
                <li><a href="/"><img src="../assets/img/アイコン_花.png" alt="アイコン_花"></a></li>
                <li><a href="/register"><img src="../assets/img/アイコン_ユーザー.png" alt="アイコン_ユーザー"></a></li>
                <li><a href="/cart"><img src="../assets/img/アイコン_カート.png" alt="アイコン_カート"></a></li>
                <li><a href="/login"><img src="../assets/img/アイコン_管理画面.png" alt="アイコン_管理画面"></a></li>
            </ul>
            <nav>
                <ul>
                    <li>管理者画面 > </li>
                    <li><a href="/control_register">商品管理</a></li>
                    <li>|</li>
                    <li><a href="/control_edit">商品編集</a></li>
                </ul>
            </nav>
        </header>
        <main>
            <div class="container">
                <div class="grid">
                </div>
            </div>
        </main>
        <footer>
            <div class="container">
                <small>Copyright &copy; 2024 EBA All rights reserved.</small>
            </div>
        </footer>
        <script type="text/javascript">
            const products = JSON.parse('<%= JSON.stringify(products) %>'.replace(/&#34;/g, '"'));
            // 重複したデータをフィルタリング
            const dataFiltered =
                products.filter((val, i, self) => self.findIndex(
                    (productsElement) => productsElement.name === val.name) === i);
            //商品情報表示領域の作成
            let grid = document.querySelector(".grid")
            dataFiltered.map((data) => {
                //タグの生成
                const item = document.createElement("div");
                const imageParag = document.createElement("p");
                const image = document.createElement("img");
                const name = document.createElement("p");
                const nameAnchor = document.createElement("a");
                const price = document.createElement("p");
                const stock = document.createElement("p");
                //各要素へ属性の付与
                item.classList.add("item")
                name.classList.add("name")
                nameAnchor.setAttribute("href", `/control_edit_product/${data.name}`)
                price.classList.add("price")
                stock.classList.add("stock")
                //商品情報を受け取る
                nameAnchor.innerHTML = `商品名：${data.name}`
                image.setAttribute('src', `../assets/img/${data.image}`)
                price.innerHTML = `販売価格：${data.price}円`
                stock.innerHTML = `在庫数：${data.stock}本`
                //商品情報表示領域の完成
                imageParag.append(image)
                item.append(imageParag)
                name.append(nameAnchor)
                item.append(name)
                item.append(price)
                item.append(stock)
                //ブラウザに出力
                grid.append(item)
            })
        </script>
    </body>
</html>
